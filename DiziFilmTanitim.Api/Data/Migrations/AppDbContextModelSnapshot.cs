// <auto-generated />
using System;
using DiziFilmTanitim.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiziFilmTanitim.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Bolum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BolumNumarasi")
                        .HasColumnType("int");

                    b.Property<string>("Ozet")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("SezonId")
                        .HasColumnType("int");

                    b.Property<int?>("SureDakika")
                        .HasColumnType("int");

                    b.Property<DateTime?>("YayinTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SezonId");

                    b.ToTable("Bolumler");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Dizi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AfisDosyaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("Ozet")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("YapimYili")
                        .HasColumnType("int");

                    b.Property<int?>("YonetmenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YonetmenId");

                    b.ToTable("Diziler");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AfisDosyaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ozet")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SureDakika")
                        .HasColumnType("int");

                    b.Property<int?>("YapimYili")
                        .HasColumnType("int");

                    b.Property<int?>("YonetmenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YonetmenId");

                    b.ToTable("Filmler");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.KullaniciDiziPuan", b =>
                {
                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("DiziId")
                        .HasColumnType("int");

                    b.Property<int>("Puan")
                        .HasColumnType("int");

                    b.HasKey("KullaniciId", "DiziId");

                    b.HasIndex("DiziId");

                    b.ToTable("KullaniciDiziPuanlari");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.KullaniciFilmPuan", b =>
                {
                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("Puan")
                        .HasColumnType("int");

                    b.HasKey("KullaniciId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("KullaniciFilmPuanlari");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.KullaniciListesi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("ListeAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("KullaniciListeleri");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Oyuncu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Biyografi")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotografDosyaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Oyuncular");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Sezon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DiziId")
                        .HasColumnType("int");

                    b.Property<int>("SezonNumarasi")
                        .HasColumnType("int");

                    b.Property<DateTime?>("YayinTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DiziId");

                    b.ToTable("Sezonlar");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Tur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Turler");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Yonetmen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Biyografi")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotografDosyaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yonetmenler");
                });

            modelBuilder.Entity("DiziKullaniciListesi", b =>
                {
                    b.Property<int>("DizilerId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciListeleriId")
                        .HasColumnType("int");

                    b.HasKey("DizilerId", "KullaniciListeleriId");

                    b.HasIndex("KullaniciListeleriId");

                    b.ToTable("DiziKullaniciListesi");
                });

            modelBuilder.Entity("DiziOyuncu", b =>
                {
                    b.Property<int>("DizilerId")
                        .HasColumnType("int");

                    b.Property<int>("OyuncularId")
                        .HasColumnType("int");

                    b.HasKey("DizilerId", "OyuncularId");

                    b.HasIndex("OyuncularId");

                    b.ToTable("DiziOyuncu");
                });

            modelBuilder.Entity("DiziTur", b =>
                {
                    b.Property<int>("DizilerId")
                        .HasColumnType("int");

                    b.Property<int>("TurlerId")
                        .HasColumnType("int");

                    b.HasKey("DizilerId", "TurlerId");

                    b.HasIndex("TurlerId");

                    b.ToTable("DiziTur");
                });

            modelBuilder.Entity("FilmKullaniciListesi", b =>
                {
                    b.Property<int>("FilmlerId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciListeleriId")
                        .HasColumnType("int");

                    b.HasKey("FilmlerId", "KullaniciListeleriId");

                    b.HasIndex("KullaniciListeleriId");

                    b.ToTable("FilmKullaniciListesi");
                });

            modelBuilder.Entity("FilmOyuncu", b =>
                {
                    b.Property<int>("FilmlerId")
                        .HasColumnType("int");

                    b.Property<int>("OyuncularId")
                        .HasColumnType("int");

                    b.HasKey("FilmlerId", "OyuncularId");

                    b.HasIndex("OyuncularId");

                    b.ToTable("FilmOyuncu");
                });

            modelBuilder.Entity("FilmTur", b =>
                {
                    b.Property<int>("FilmlerId")
                        .HasColumnType("int");

                    b.Property<int>("TurlerId")
                        .HasColumnType("int");

                    b.HasKey("FilmlerId", "TurlerId");

                    b.HasIndex("TurlerId");

                    b.ToTable("FilmTur");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Bolum", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Sezon", "Sezon")
                        .WithMany("Bolumler")
                        .HasForeignKey("SezonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sezon");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Dizi", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Yonetmen", "Yonetmen")
                        .WithMany("Diziler")
                        .HasForeignKey("YonetmenId");

                    b.Navigation("Yonetmen");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Film", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Yonetmen", "Yonetmen")
                        .WithMany("Filmler")
                        .HasForeignKey("YonetmenId");

                    b.Navigation("Yonetmen");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.KullaniciDiziPuan", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Dizi", "Dizi")
                        .WithMany("KullaniciPuanlari")
                        .HasForeignKey("DiziId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiziFilmTanitim.Core.Entities.Kullanici", "Kullanici")
                        .WithMany("DiziPuanlari")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dizi");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.KullaniciFilmPuan", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Film", "Film")
                        .WithMany("KullaniciPuanlari")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiziFilmTanitim.Core.Entities.Kullanici", "Kullanici")
                        .WithMany("FilmPuanlari")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.KullaniciListesi", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciListeleri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Sezon", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Dizi", "Dizi")
                        .WithMany("Sezonlar")
                        .HasForeignKey("DiziId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dizi");
                });

            modelBuilder.Entity("DiziKullaniciListesi", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Dizi", null)
                        .WithMany()
                        .HasForeignKey("DizilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiziFilmTanitim.Core.Entities.KullaniciListesi", null)
                        .WithMany()
                        .HasForeignKey("KullaniciListeleriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiziOyuncu", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Dizi", null)
                        .WithMany()
                        .HasForeignKey("DizilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiziFilmTanitim.Core.Entities.Oyuncu", null)
                        .WithMany()
                        .HasForeignKey("OyuncularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiziTur", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Dizi", null)
                        .WithMany()
                        .HasForeignKey("DizilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiziFilmTanitim.Core.Entities.Tur", null)
                        .WithMany()
                        .HasForeignKey("TurlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmKullaniciListesi", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiziFilmTanitim.Core.Entities.KullaniciListesi", null)
                        .WithMany()
                        .HasForeignKey("KullaniciListeleriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmOyuncu", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiziFilmTanitim.Core.Entities.Oyuncu", null)
                        .WithMany()
                        .HasForeignKey("OyuncularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmTur", b =>
                {
                    b.HasOne("DiziFilmTanitim.Core.Entities.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiziFilmTanitim.Core.Entities.Tur", null)
                        .WithMany()
                        .HasForeignKey("TurlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Dizi", b =>
                {
                    b.Navigation("KullaniciPuanlari");

                    b.Navigation("Sezonlar");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Film", b =>
                {
                    b.Navigation("KullaniciPuanlari");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Kullanici", b =>
                {
                    b.Navigation("DiziPuanlari");

                    b.Navigation("FilmPuanlari");

                    b.Navigation("KullaniciListeleri");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Sezon", b =>
                {
                    b.Navigation("Bolumler");
                });

            modelBuilder.Entity("DiziFilmTanitim.Core.Entities.Yonetmen", b =>
                {
                    b.Navigation("Diziler");

                    b.Navigation("Filmler");
                });
#pragma warning restore 612, 618
        }
    }
}
